Author: Robie Basak <robie.basak@ubuntu.com>
Bug-Ubuntu: https://launchpad.net/bugs/1430874
Description: explicitly initialise struct correctly
 Fixes FTBFS on various architectures where the struct has holes and thus the
 cast to a buffer leaves it with uninitialised values even if all members have
 been initialised.
Forwarded: yes
Reviewed-by: Alexey Kopytov (Percona)
Last-Update: 2015-03-18

--- a/galerautils/src/gu_rand.c
+++ b/galerautils/src/gu_rand.c
@@ -14,6 +14,8 @@
 #include "gu_rand.h"
 #include "gu_hash.h"
 
+#include <string.h> // for memset
+
 /*! Structure to hold entropy data.
  *  Should be at least 20 bytes on 32-bit systems and 28 bytes on 64-bit */
 struct gu_rse
@@ -29,7 +31,17 @@
 long int
 gu_rand_seed_long (long long time, const void* heap_ptr, pid_t pid)
 {
-    gu_rse_t rse = { time, heap_ptr, &time, pid };
+    gu_rse_t rse;
+
+    /* Explicitly initialise rse with all zeroes, including across any holes.
+     * As gu_fast_hash64_medium will treat it as a buffer, any holes would
+     * otherwise be uninitialised. */
+    memset(&rse, 0, sizeof(rse));
+    rse.time = time;
+    rse.heap_ptr = heap_ptr;
+    rse.stack_ptr = &time;
+    rse.pid = pid;
+
     return gu_fast_hash64_medium (&rse, sizeof(rse));
 }
 
